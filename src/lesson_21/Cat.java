package lesson_21;

public class Cat {
    // характеристики / состояние будущих объектов
    String name; // поле класса
    String color; //
    int age;


    /*

    Конструктор класса

    Специальный тип метода, который автоматически вызывается при создании нового объекта
    Основная задача конструктора установить начальные свойства объекта (проинициализировать все значения)

    Особенности конструктора:

    1. Имя конструктора совпадает с именем класса
    2. Конструктор не имеет типа возвращаемого значения.
    Даже void не указывается (т.к. автоматически возвращает экземпляр класса (объект)
    3. Конструктор вызывается автоматически
    */

    // Конструктор по умолчанию и все поля получают значения по умолчанию для своего типа данных

    public Cat(){

    }


    //

    // Конструктор - это метод. И я могу передать какие-то значения в тело метода

    public Cat (String catName){
        name = catName;
    }

    public Cat (String catName, String color){
        name = catName;
        this.color = color;

        // Ключевое слово this используется внутри класса для ссылки на текущий объект
    }

    public Cat (String name, String color, int age){


        // this может быть использована для вызова других конструкторов класса

        this(name,color); // вызов другого конструктора класса

        // Вызов конструктора, принимающего две String-и
        //this.name = name;
        //this.color = color;
        this.age = age;

        // Ключевое слово this используется внутри класса для ссылки на текущий объект
    }


    // Поведение будущих объектов
    public void sleep(){
        System.out.println("Я сплю!");
    }

    public void sayMeow(){
        System.out.println("Meow!");
    }

    public void run(){
        System.out.println("Я бегу!");
    }

    public void whoAmI(){

        System.out.printf("Я котик %s, возраст: %d, мой окрас: %s\n", name,age,color);
    }

}
